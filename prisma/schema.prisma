generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_POOLED_URL")
  directUrl = env("DATABASE_DIRECT_URL")
  schemas   = ["event", "public"]
}

model SwapEvent {
  transaction String   @id(map: "swap_pk")
  block       Decimal  @db.Decimal(78, 0)
  time        DateTime @db.Timestamp(6)
  sender      String
  to          String
  pool        String
  amount0_in  Decimal  @default(0) @db.Decimal(78, 0)
  amount1_in  Decimal  @default(0) @db.Decimal(78, 0)
  amount0_out Decimal  @default(0) @db.Decimal(78, 0)
  amount1_out Decimal  @default(0) @db.Decimal(78, 0)
  Pool        Pool     @relation("swaps", fields: [pool], references: [address], onDelete: NoAction, onUpdate: NoAction, map: "pool_fk")

  @@map("swap")
  @@schema("event")
}

model NFTPool {
  token String @id(map: "nftpool_pk")
  pid   Int    @unique

  @@map("nftpool")
  @@schema("public")
}

model Pool {
  address   String      @id(map: "pool_pk")
  pid       Int         @unique
  name      String
  symbol    String
  decimals  Int         @default(18)
  stable    Boolean     @default(false)
  token0    String
  token1    String
  reserve0  Decimal     @default(0) @db.Decimal(78, 0)
  reserve1  Decimal     @default(0) @db.Decimal(78, 0)
  supply    Decimal     @default(0) @db.Decimal(78, 0)
  fee1      Int         @default(300)
  fee0      Int         @default(300)
  klast     Decimal     @default(0) @db.Decimal(78, 0)
  immutable Boolean     @default(false)
  Swaps     SwapEvent[] @relation("swaps")

  @@map("pool")
  @@schema("public")
}

enum Currency {
  usd

  @@schema("public")
}

model Price {
  token     String
  price     Decimal  @default(0) @db.Decimal(78, 0)
  currency  Currency @default(usd)
  timestamp DateTime @default(now()) @db.Timestamp(6)
  Token     Token?   @relation(fields: [token], references: [address])

  @@id([token, currency])
  @@map("price")
  @@schema("public")
}

model Token {
  address  String  @id(map: "token_pk")
  name     String
  symbol   String
  stable   Boolean @default(false)
  decimals Int     @default(18)
  logo     String?
  Prices   Price[]

  @@map("token")
  @@schema("public")
}
